// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/a/PC.hdl

/**
 * A 16-bit counter with load and reset control bits.
 * if      (reset[t] == 1) out[t+1] = 0
 * else if (load[t] == 1)  out[t+1] = in[t]
 *      else if (inc[t] == 1)   out[t+1] = out[t] + 1  (integer addition)
 *          else                    out[t+1] = out[t]
 */

CHIP PC {
    IN in[16],load,inc,reset;
    OUT out[16];

    PARTS:
    // Video Notes:
    // Can be built from a register, an incrementor,
    // and some logic gates
    
    Not (in=reset, out=notReset);
    Not (in=load, out=notLoad);
    And (a=notReset, b=load, out=newLoad);
    And (a=notReset, b=notLoad, out=notResetAndLoad);
    And (a=notResetAndLoad, b=inc, out=notResetAndLoadAndInc);
    
    // Zeros it out
    Mux16 (a=in, b=false, sel=reset, out=temp1);
    // Loads up the old result
    Mux16 (a=oldOut, b=temp1, sel=newLoad, out=temp2);
    // Increments the old result
    Inc16 (in=oldOut, out=temp3);
    // Chooese between old result and incremented result
    Mux16 (a=temp2, b=temp3, sel=notResetAndLoadAndInc, out=temp4);
    // Makes sure the reset isn't overlooked.
    Mux16 (a=temp4, b=false, sel=reset, out=temp5);
    
    Register (in=temp5, load=true, out=oldOut, out=out);
}