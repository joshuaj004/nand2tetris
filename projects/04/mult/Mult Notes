// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/04/Mult.asm

// Multiplies R0 and R1 and stores the result in R2.
// (R0, R1, R2 refer to RAM[0], RAM[1], and RAM[2], respectively.)

// Put your code here.
// Video Notes:
// Use Symbolic variables and labels
// Use sensible variable and label names
// Variables: Lower-case
// Labels: Upper-case
// Use Indentation 
// Start with Psedo-code 

// Book notes:
// D is used solely to store data values
// A can store a data register or an address register
// M refers to the data whose address is the current value in the A register
// E.g if we want the opreation D = Memory[516] - 1, we set A to 516
// and then D = M - 1
// A is also usedfor our goto commands. We set A to our goto address
// and then we jump to it 
// Every operation that involves a memory location requires 2 hack commands
// A instruction is an address instruction 
// Syntax: @value where value is either a non-negative decimal number or 
//    a symbol refering to such number.
// The A instruction is the only way to enter a constant into the computer.
// It setst he stage for a subsequent C-instruction to manipulate a certain
// Data memory location or an instruction that specicifies a jump
// C instruction is a compute instruction

// Psedo-code:
// Start with a variable i = 0
// while i < R1:
//   Ram[2] += R0 
//   i++;    
// 

@i  // Sets the constant i = 0
M=0

(LOOP)
@i
M=D        
@R1
D=M
@END
D;JLE       
D=M
@i
D=M
M=M+1
@R0
D=M
@R2
M=M+D
@LOOP
0;JMP

(END)
@END
0;JMP

